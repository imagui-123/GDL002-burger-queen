{"version":3,"sources":["components/counter.js","components/menuBreakfast.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Component","MenuB","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","orders","handleSubmit","bind","assertThisInitialized","nameItem","price","order","item","push","props","addOrders","react_default","a","createElement","BreakfastMenu","map","menuDetail","index","key","className","name","type","Navigation","id","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","components_menuBreakfast","App","src","alt","components_Navigation","Boolean","window","location","hostname","match","rootElement","document","getElementById","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2hBAEsBA,yBCwEPC,qBArEZ,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAM,CACPC,OAAO,IAEXR,EAAKS,aAAaT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IALTA,4EAQAY,EAAUC,GACtB,IAEMC,EAAQ,CACZC,KAAMH,EACNC,MAAOA,GAJMV,KAAKI,MAAMC,OAOnBQ,KAAKF,GACZX,KAAKc,MAAMC,UAAUf,KAAKI,MAAMC,yCAI5B,OACAW,EAAAC,EAAAC,cAAA,WACMC,EAAcC,IAAI,SAACC,EAAYC,GAAb,OACjBN,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,GACVN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,YACdR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACfR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aACfR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,cAAcH,EAAWI,MACvCT,EAAAC,EAAAC,cAAA,KAAGM,UAAU,aAAaH,EAAWX,OACrCM,EAAAC,EAAAC,cAAA,UAAQQ,KAAK,SAASF,UAAU,mBAAhC,4BA/BI7B,cCuCLgC,mLArCP,OACRX,EAAAC,EAAAC,cAAA,OAAKM,UAAU,YAAYI,GAAG,oBAC5BZ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cAAcI,GAAG,cAC9BZ,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QACZR,EAAAC,EAAAC,cAAA,UAAQM,UAAU,WAAWE,KAAK,SAASG,cAAY,WAAWC,cAAY,eAAeC,gBAAc,OAAOC,gBAAc,eAAhI,cAMJhB,EAAAC,EAAAC,cAAA,OAAKU,GAAG,cAAcJ,UAAU,gBAAgBS,kBAAgB,aAAaC,cAAY,qBACvFlB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aACfR,EAAAC,EAAAC,cAACiB,EAAD,SAKJnB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cAAcI,GAAG,cAC9BZ,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QACZR,EAAAC,EAAAC,cAAA,UAAQM,UAAU,qBAAqBE,KAAK,SAASG,cAAY,WAAWC,cAAY,eAAeC,gBAAc,QAAQC,gBAAc,eAA3I,YAKJhB,EAAAC,EAAAC,cAAA,OAAKU,GAAG,cAAcJ,UAAU,WAAWS,kBAAgB,aAAaC,cAAY,qBAClFlB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aAAf,wmBA7BmB7B,aCiBVyC,mLAZP,OACIpB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACXR,EAAAC,EAAAC,cAAA,UAAQM,UAAU,cACdR,EAAAC,EAAAC,cAAA,OAAKmB,IAAK,uGAAwGb,UAAU,WAAWc,IAAI,UAE/ItB,EAAAC,EAAAC,cAACqB,EAAD,cAPE5C,aCKE6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCDN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASL,GD+GnB,kBAAmBM,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.889443cd.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 0\r\n        };\r\n    };\r\n\r\n    handleDecrement = () => {\r\n        this.setState({\r\n            count: this.state.count - 1\r\n        });\r\n    };\r\n\r\n    handleIncrement = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center\">\r\n                <p>{this.state.count}</p>\r\n                <button onClick={this.handleDecrement}>-</button>\r\n                <button onClick={this.handleIncrement}>+</button>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Counter","import React,{Component} from 'react';\r\nimport BreakfastMenu from '../components/breakfast.json';\r\nimport '../components/menuBreakfast.css';\r\n\r\nclass MenuB extends Component {\r\n   constructor(){\r\n       super();\r\n       this.state={\r\n           orders:[]\r\n       }\r\n       this.handleSubmit=this.handleSubmit.bind(this);\r\n   }\r\n\r\n   handleSubmit(nameItem, price){\r\n    const orders = this.state.orders;\r\n\r\n    const order = {\r\n      item: nameItem,\r\n      price: price\r\n    }\r\n \r\n    orders.push(order);\r\n    this.props.addOrders(this.state.orders);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n             {BreakfastMenu.map((menuDetail, index) =>\r\n               <div key={index}>\r\n               <div className=\"col-sm-6\">\r\n                <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{menuDetail.name}</h5>\r\n                <p className=\"cart-text\">{menuDetail.price}</p>\r\n                <button type=\"submit\" className=\"btn btn-primary\">+ Add Item</button>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                \r\n              )}\r\n        </div>\r\n \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n// class AddMenuForm extends React.Component{\r\n// createMenu(event){\r\n//     event.preventDefault();\r\n//     let menu={\r\n//         table:this.refs.table.value,\r\n//         name:this.refs.name.value,\r\n//         price:this.refs.price.value,\r\n//         image:this.refs.image.value\r\n//     }\r\n//     this.PaymentResponse.addMenu(menu);\r\n//     this.refs.AddMenuForm.reset();\r\n// }\r\n//     render(){\r\n//         return(\r\n//             <form className=\"menu-edit\" ref=\"menuForm\" onSubmit={this.createMenu}>\r\n//                 <input type=\"text\" ref=\"name\" placeholder=\"Table\"/>\r\n//                 <input type=\"text\" ref=\"name\" placeholder=\"Product Name \"/>\r\n//                 <input type=\"text\" ref=\"price\" placeholder=\"Price\"/>\r\n//                 <input type=\"text\" ref=\"image\" placeholder=\"Url to Image\"/>\r\n//                 <button type=\"submit\">+ Add Item</button>\r\n//             </form>\r\n//         )\r\n//     }\r\n// }\r\nexport default MenuB;","import React,{Component} from 'react';\r\nimport BreakMenu from '../components/menuBreakfast.js';\r\n\r\n\r\nclass Navigation extends Component{ \r\nrender() {\r\n        return(\r\n<div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"card\">\r\n    <div className=\"card-header\" id=\"headingOne\">\r\n      <h2 className=\"mb-0\">\r\n        <button className=\"btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n          Desayuno\r\n        </button>\r\n      </h2>\r\n    </div>\r\n\r\n    <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\r\n      <div className=\"card-body\">\r\n      <BreakMenu />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"card\">\r\n    <div className=\"card-header\" id=\"headingTwo\">\r\n      <h2 className=\"mb-0\">\r\n        <button className=\"btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n          Comida\r\n        </button>\r\n      </h2>\r\n    </div>\r\n    <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionExample\">\r\n      <div className=\"card-body\">\r\n        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n        );\r\n }\r\n}\r\n\r\nexport default Navigation;\r\n\r\n\r\n   \r\n","import React,{Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Counter from './components/counter';\nimport Navigation from './components/Navigation';\n\n\nclass App extends Component{\n    render(){\n        return(\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={\"https://lh3.googleusercontent.com/LJ0sv5RNns6G-4luE4EtXKCWiOoXV2ZQnpa0MTBU0G0hJ6N2fuazj9HRp3Ba91wE4A\"} className=\"App-logo\" alt=\"logo\" />\n                </header>\n                <Navigation />\n                {/* <Counter /> */}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css'; //WEB PACK AFFECTAN A TODA LA APLICACION\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import SideBar from \"./components/sideBar\";\n//ARCHIVO PRINCIPAL DE REACT COMO EL MAIN\n\n\n\n// const Appi=()=>{\n//   return(\n//     <SideBar />\n//   );\n// };\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}